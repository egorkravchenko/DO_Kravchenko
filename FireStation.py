import math
class Node:

    def __init__(self, data, indexloc=None):
        self.data = data
        self.index = indexloc


class Graph:

    @classmethod
    def create_from_nodes(self, nodes):
        return Graph(len(nodes), len(nodes), nodes)

    def __init__(self, row, col, nodes=None):

        self.adj_mat = [[0] * col for _ in range(row)]
        self.nodes = nodes
        for i in range(len(self.nodes)):
            self.nodes[i].index = i


    def connect_dir(self, node1, node2, weight=1):
        node1, node2 = self.get_index_from_node(node1), self.get_index_from_node(node2)
        self.adj_mat[node1][node2] = weight


    def connect(self, node1, node2, weight=1):
        self.connect_dir(node1, node2, weight)
        self.connect_dir(node2, node1, weight)


    def connections_from(self, node):
        node = self.get_index_from_node(node)
        return [(self.nodes[col_num], self.adj_mat[node][col_num]) for col_num in range(len(self.adj_mat[node])) if
                self.adj_mat[node][col_num] != 0]


    def connections_to(self, node):
        node = self.get_index_from_node(node)
        column = [row[node] for row in self.adj_mat]
        return [(self.nodes[row_num], column[row_num]) for row_num in range(len(column)) if column[row_num] != 0]

    def print_adj_mat(self):
        for row in self.adj_mat:
            print(row)

    def node(self, index):
        return self.nodes[index]

    def remove_conn(self, node1, node2):
        self.remove_conn_dir(node1, node2)
        self.remove_conn_dir(node2, node1)

    def remove_conn_dir(self, node1, node2):
        node1, node2 = self.get_index_from_node(node1), self.get_index_from_node(node2)
        self.adj_mat[node1][node2] = 0


    def can_traverse_dir(self, node1, node2):
        node1, node2 = self.get_index_from_node(node1), self.get_index_from_node(node2)
        return self.adj_mat[node1][node2] != 0

    def has_conn(self, node1, node2):
        return self.can_traverse_dir(node1, node2) or self.can_traverse_dir(node2, node1)

    def add_node(self, node):
        self.nodes.append(node)
        node.index = len(self.nodes) - 1
        for row in self.adj_mat:
            row.append(0)
        self.adj_mat.append([0] * (len(self.adj_mat) + 1))

    def get_weight(self, n1, n2):
        node1, node2 = self.get_index_from_node(n1), self.get_index_from_node(n2)
        return self.adj_mat[node1][node2]

    def get_index_from_node(self, node):
        if not isinstance(node, Node) and not isinstance(node, int):
            raise ValueError("node must be an integer or a Node object")
        if isinstance(node, int):
            return node
        else:
            return node.index

    def dijkstra(self, node):
        nodenum = self.get_index_from_node(node)

        dist = [None] * len(self.nodes)
        for i in range(len(dist)):
            dist[i] = [float("inf")]
            dist[i].append([self.nodes[nodenum]])

        dist[nodenum][0] = 0

        queue = [i for i in range(len(self.nodes))]

        seen = set()
        while len(queue) > 0:

            min_dist = float("inf")
            min_node = None
            for n in queue:
                if dist[n][0] < min_dist and n not in seen:
                    min_dist = dist[n][0]
                    min_node = n

            queue.remove(min_node)
            seen.add(min_node)
            connections = self.connections_from(min_node)
            for (node, weight) in connections:
                tot_dist = weight + min_dist
                if tot_dist < dist[node.index][0]:
                    if node.index == 72 or node.index == 91: 
                        dist[node.index][0] = 5*tot_dist    
                    elif node.index == 1 or node.index == 77 or node.index == 94:
                        dist[node.index][0] = 3*tot_dist  
                    else:
                        dist[node.index][0] = tot_dist 
                        
                    if  dist[node.index][0] > 10:
                        dist[node.index][0] *= (math.e)**dist[node.index][0]
                    dist[node.index][1] = list(dist[min_node][1])
                    dist[node.index][1].append(node)
                
        return dist

    def dijkstra2(self, node):
        nodenum = self.get_index_from_node(node)

        dist = [None] * len(self.nodes)
        for i in range(len(dist)):
            dist[i] = [float("inf")]
            dist[i].append([self.nodes[nodenum]])

        dist[nodenum][0] = 0

        queue = [i for i in range(len(self.nodes))]

        seen = set()
        while len(queue) > 0:

            min_dist = float("inf")
            min_node = None
            for n in queue:
                if dist[n][0] < min_dist and n not in seen:
                    min_dist = dist[n][0]
                    min_node = n

            queue.remove(min_node)
            seen.add(min_node)
            connections = self.connections_from(min_node)
            for (node, weight) in connections:
                tot_dist = weight + min_dist
                dist[node.index][0] = tot_dist    
                dist[node.index][1] = list(dist[min_node][1])
                dist[node.index][1].append(node)
                
        return dist    
  

 # Задаємо вершини
a1 = Node("A1")
a2 = Node("A2")
a3 = Node("A3")
a4 = Node("A4")
a5 = Node("A5")
a6 = Node("A6")
a7 = Node("A7")
a8 = Node("A8")
a9 = Node("A9")
a10 = Node("A10")
a11 = Node("A11")
a12 = Node("A12")
a13 = Node("A13")
a14 = Node("A14")
a15 = Node("A15")
a16 = Node("A16")
a17 = Node("A17")
a18 = Node("A18")
a19 = Node("A19")
a20 = Node("A20")
a21 = Node("A21")
a22 = Node("A22")
a23 = Node("A23")
a24 = Node("A24")
a25 = Node("A25")
a26 = Node("A26")
a27 = Node("A27")
a28 = Node("A28")
a29 = Node("A29")
a30 = Node("A30")
a31 = Node("A31")
a32 = Node("A32")
a33 = Node("A33")
a34 = Node("A34")
a35 = Node("A35")
a36 = Node("A36")
a37 = Node("A37")
a38 = Node("A38")
a39 = Node("A39")
a40 = Node("A40")
a41 = Node("A41")
a42 = Node("A42")
a43 = Node("A43")
a44 = Node("A44")
a45 = Node("A45")
a46 = Node("A46")
a47 = Node("A47")
a48 = Node("A48")
a49 = Node("A49")
a50 = Node("A50")
a51 = Node("A51")
a52 = Node("A52")
a53 = Node("A53")
a54 = Node("A54")
a55 = Node("A55")
a56 = Node("A56")
a57 = Node("A57")
a58 = Node("A58")
a59 = Node("A59")
a60 = Node("A60")
a61 = Node("A61")
a62 = Node("A62")
a63 = Node("A63")
a64 = Node("A64")
a65 = Node("A65")
a66 = Node("A66")
a67 = Node("A67")
a68 = Node("A68")
a69 = Node("A69")
a70 = Node("A70")
a71 = Node("A71")
a72 = Node("A72")
a73 = Node("A73")
a74 = Node("A74")
a75 = Node("A75")
a76 = Node("A76")
a77 = Node("A77")
a78 = Node("A78")
a79 = Node("A79")
a80 = Node("A80")
a81 = Node("A81")
a82 = Node("A82")
a83 = Node("A83")
a84 = Node("A84")
a85 = Node("A85")
a86 = Node("A86")
a87 = Node("A87")
a88 = Node("A88")
a89 = Node("A89")
a90 = Node("A90")
a91 = Node("A91")
a92 = Node("A92")
a93 = Node("A93")
a94 = Node("A94")
a95 = Node("A95")
a96 = Node("A96")
a97 = Node("A97")
a98 = Node("A98")
a99 = Node("A99")
a100 = Node("A100")
a101 = Node("A101")
a102 = Node("A102")
a103 = Node("A103")
a104 = Node("A104")
a105 = Node("A105")
a106 = Node("A106")
a107 = Node("A107")
a108 = Node("A108")
a109 = Node("A109")
a110 = Node("A110")
a111 = Node("A111")
a112 = Node("A112")
a113 = Node("A113")
a114 = Node("A114")
a115 = Node("A115")
a116 = Node("A116")
a117 = Node("A117")
a118 = Node("A118")
a119 = Node("A119")
a120 = Node("A120")
a121 = Node("A121")
a122 = Node("A122")
a123 = Node("A123")
a124 = Node("A124")
a125 = Node("A125")
a126 = Node("A126")
a127 = Node("A127")
a128 = Node("A128")
a129 = Node("A129")
a130 = Node("A130")
a131 = Node("A131")
a132 = Node("A132")
a133 = Node("A133")
a134 = Node("A134")
a135 = Node("A135")
a136 = Node("A136")
a137 = Node("A137")
a138 = Node("A138")
a139 = Node("A139")
a140 = Node("A140")
a141 = Node("A141")
a142 = Node("A142")
a143 = Node("A143")
a144 = Node("A144")
a145 = Node("A145")
a146 = Node("A146")
a147 = Node("A147")
a148 = Node("A148")
a149 = Node("A149")
a150 = Node("A150")
a151 = Node("A151")
a152 = Node("A152")
a153 = Node("A153")
a154 = Node("A154")
a155 = Node("A155")
a156 = Node("A156")
a157 = Node("A157")
a158 = Node("A158")
a159 = Node("A159")
a160 = Node("A160")
a161 = Node("A161")
a162 = Node("A162")
a163 = Node("A163")
a164 = Node("A164")
a165 = Node("A165")# Створюєм об'єкт - граф
graph = Graph.create_from_nodes([a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
                                   a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40,
                                   a41, a42, a43, a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a60,
                                   a61, a62, a63, a64, a65, a66, a67, a68, a69, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a80,
                                   a81, a82, a83, a84, a85, a86, a87, a88, a89, a90, a91, a92, a93, a94, a95, a96, a97, a98, a99, a100,
                                   a101, a102, a103, a104, a105, a106, a107, a108, a109, a110, a111, a112, a113, a114, a115, a116, a117, 
                                   a118, a119, a120, a121, a122, a123, a124, a125, a126, a127, a128, a129, a130, a131, a132, a133, a134, 
                                   a135, a136, a137, a138, a139, a140, a141, a142, a143, a144, a145, a146, a147, a148, a149, a150, a151, 
                                   a152, a153, a154, a155, a156, a157, a158, a159, a160, a161, a162, a163, a164, a165])

                  # З'єднуєм вершини - для матриці суміжності
graph.connect(a1, a2)
graph.connect(a1, a3)
graph.connect(a2, a11)
graph.connect(a2, a4)
graph.connect(a3, a4)
graph.connect(a3, a5)
graph.connect(a4, a13)
graph.connect(a4, a6)
graph.connect(a5, a6)
graph.connect(a5, a7)
graph.connect(a6, a8)
graph.connect(a6, a15)
graph.connect(a7, a8)
graph.connect(a7, a17)
graph.connect(a8, a9)
graph.connect(a8, a18)
graph.connect(a9, a10)
graph.connect(a9, a19)
graph.connect(a9, a15)
graph.connect(a10, a16)
graph.connect(a10, a20)
graph.connect(a10, a60)
graph.connect(a11, a12)
graph.connect(a11, a13)
graph.connect(a12, a66)
graph.connect(a12, a14)
graph.connect(a13, a14)
graph.connect(a13, a15)
graph.connect(a14, a64)
graph.connect(a14, a16)
graph.connect(a15, a16)
graph.connect(a16, a62)
graph.connect(a17, a18)
graph.connect(a17, a21)
graph.connect(a18, a19)
graph.connect(a18, a22)
graph.connect(a19, a20)
graph.connect(a19, a23)
graph.connect(a20, a58)
graph.connect(a20, a24)
graph.connect(a21, a22)
graph.connect(a22, a23)
graph.connect(a23, a24)
graph.connect(a24, a56)
graph.connect(a25, a26)
graph.connect(a25, a27)
graph.connect(a25, a30)
graph.connect(a26, a28)
graph.connect(a27, a32)
graph.connect(a28, a29)
graph.connect(a28, a30)
graph.connect(a29, a30)
graph.connect(a29, a31)
graph.connect(a29, a33)
graph.connect(a30, a32)
graph.connect(a31, a32)
graph.connect(a31, a34)
graph.connect(a31, a45)
graph.connect(a32, a47)
graph.connect(a33, a34)
graph.connect(a33, a35)
graph.connect(a34, a43)
graph.connect(a34, a36)
graph.connect(a35, a36)
graph.connect(a35, a37)
graph.connect(a36, a38)
graph.connect(a36, a41)
graph.connect(a37, a38)
graph.connect(a38, a39)
graph.connect(a39, a40)
graph.connect(a39, a41)
graph.connect(a40, a42)
graph.connect(a41, a42)
graph.connect(a41, a43)
graph.connect(a42, a44)
graph.connect(a42, a52)
graph.connect(a43, a44)
graph.connect(a43, a45)
graph.connect(a44, a46)
graph.connect(a44, a51)
graph.connect(a45, a46)
graph.connect(a45, a47)
graph.connect(a46, a48)
graph.connect(a46, a50)
graph.connect(a47, a48)
graph.connect(a48, a49)
graph.connect(a49, a50)
graph.connect(a49, a111)
graph.connect(a49, a116)
graph.connect(a50, a51)
graph.connect(a50, a117)
graph.connect(a51, a52)
graph.connect(a51, a118)
graph.connect(a52, a119)
graph.connect(a53, a54)
graph.connect(a53, a57)
graph.connect(a53, a101)
graph.connect(a54, a102)
graph.connect(a54, a55)
graph.connect(a55, a103)
graph.connect(a55, a109)
graph.connect(a55, a110)
graph.connect(a56, a57)
graph.connect(a56, a58)
graph.connect(a57, a101)
graph.connect(a57, a59)
graph.connect(a58, a59)
graph.connect(a58, a60)
graph.connect(a59, a61)
graph.connect(a59, a98)
graph.connect(a60, a61)
graph.connect(a60, a62)
graph.connect(a61, a95)
graph.connect(a61, a63)
graph.connect(a62, a64)
graph.connect(a62, a63)
graph.connect(a63, a65)
graph.connect(a63, a92)
graph.connect(a64, a65)
graph.connect(a64, a66)
graph.connect(a65, a67)
graph.connect(a65, a89)
graph.connect(a66, a67)
graph.connect(a67, a68)
graph.connect(a68, a69)
graph.connect(a68, a89)
graph.connect(a69, a70)
graph.connect(a69, a90)
graph.connect(a70, a71)
graph.connect(a70, a91)
graph.connect(a71, a72)
graph.connect(a71, a104)
graph.connect(a72, a73)
graph.connect(a72, a104)
graph.connect(a73, a74)
graph.connect(a73, a122)
graph.connect(a74, a78)
graph.connect(a74, a87)
graph.connect(a74, a131)
graph.connect(a75, a76)
graph.connect(a76, a77)
graph.connect(a77, a78)
graph.connect(a77, a79)
graph.connect(a78, a80)
graph.connect(a78, a84)
graph.connect(a79, a80)
graph.connect(a80, a81)
graph.connect(a81, a82)
graph.connect(a81, a84)
graph.connect(a81, a120)
graph.connect(a82, a83)
graph.connect(a83, a121)
graph.connect(a84, a85)
graph.connect(a85, a86)
graph.connect(a87, a140)
graph.connect(a87, a88)
graph.connect(a88, a151)
graph.connect(a89, a90)
graph.connect(a89, a92)
graph.connect(a90, a91)
graph.connect(a90, a93)
graph.connect(a91, a104)
graph.connect(a91, a94)
graph.connect(a92, a93)
graph.connect(a92, a95)
graph.connect(a93, a94)
graph.connect(a93, a96)
graph.connect(a94, a105)
graph.connect(a94, a97)
graph.connect(a95, a96)
graph.connect(a95, a98)
graph.connect(a96, a97)
graph.connect(a96, a99)
graph.connect(a97, a106)
graph.connect(a97, a100)
graph.connect(a98, a99)
graph.connect(a98, a101)
graph.connect(a99, a100)
graph.connect(a99, a102)
graph.connect(a100, a103)
graph.connect(a100, a107)
graph.connect(a101, a102)
graph.connect(a102, a103)
graph.connect(a103, a108)
graph.connect(a104, a105)
graph.connect(a104, a122)
graph.connect(a105, a106)
graph.connect(a105, a123)
graph.connect(a106, a107)
graph.connect(a106, a124)
graph.connect(a107, a108)
graph.connect(a107, a125)
graph.connect(a108, a109)
graph.connect(a108, a126)
graph.connect(a109, a112)
graph.connect(a110, a111)
graph.connect(a110, a112)
graph.connect(a111, a113)
graph.connect(a112, a113)
graph.connect(a113, a116)
graph.connect(a114, a126)
graph.connect(a114, a136)
graph.connect(a115, a127)
graph.connect(a116, a117)
graph.connect(a116, a127)
graph.connect(a117, a118)
graph.connect(a117, a128)
graph.connect(a118, a119)
graph.connect(a118, a129)
graph.connect(a119, a130)
graph.connect(a120, a121)
graph.connect(a122, a123)
graph.connect(a122, a131)
graph.connect(a123, a124)
graph.connect(a123, a132)
graph.connect(a124, a125)
graph.connect(a124, a133)
graph.connect(a125, a126)
graph.connect(a125, a134)
graph.connect(a126, a135)
graph.connect(a127, a128)
graph.connect(a127, a137)
graph.connect(a128, a129)
graph.connect(a128, a138)
graph.connect(a129, a130)
graph.connect(a129, a139)
graph.connect(a131, a132)
graph.connect(a131, a140)
graph.connect(a132, a133)
graph.connect(a132, a141)
graph.connect(a133, a134)
graph.connect(a133, a142)
graph.connect(a134, a135)
graph.connect(a134, a143)
graph.connect(a135, a136)
graph.connect(a135, a144)
graph.connect(a136, a137)
graph.connect(a136, a145)
graph.connect(a137, a138)
graph.connect(a137, a147)
graph.connect(a138, a139)
graph.connect(a138, a148)
graph.connect(a139, a149)
graph.connect(a140, a141)
graph.connect(a141, a142)
graph.connect(a141, a150)
graph.connect(a142, a143)
graph.connect(a142, a153)
graph.connect(a143, a154)
graph.connect(a143, a144)
graph.connect(a144, a156)
graph.connect(a144, a145)
graph.connect(a145, a146)
graph.connect(a146, a147)
graph.connect(a146, a158)
graph.connect(a147, a148)
graph.connect(a147, a159)
graph.connect(a148, a149)
graph.connect(a148, a160)
graph.connect(a149, a162)
graph.connect(a150, a151)
graph.connect(a150, a153)
graph.connect(a151, a152)
graph.connect(a152, a153)
graph.connect(a152, a155)
graph.connect(a153, a154)
graph.connect(a154, a155)
graph.connect(a154, a156)
graph.connect(a155, a157)
graph.connect(a156, a157)
graph.connect(a156, a158)
graph.connect(a157, a163)
graph.connect(a158, a159)
graph.connect(a158, a163)
graph.connect(a158, a164)
graph.connect(a159, a165)
graph.connect(a159, a160)
graph.connect(a160, a161)
graph.connect(a160, a162)
graph.connect(a161, a165)
graph.connect(a163, a164)
graph.connect(a164, a165)
print('Матриця суміжності')
graph.print_adj_mat()


w_graph = Graph.create_from_nodes([a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
                                   a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40,
                                   a41, a42, a43, a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a60,
                                   a61, a62, a63, a64, a65, a66, a67, a68, a69, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a80,
                                   a81, a82, a83, a84, a85, a86, a87, a88, a89, a90, a91, a92, a93, a94, a95, a96, a97, a98, a99, a100,
                                   a101, a102, a103, a104, a105, a106, a107, a108, a109, a110, a111, a112, a113, a114, a115, a116, a117, 
                                   a118, a119, a120, a121, a122, a123, a124, a125, a126, a127, a128, a129, a130, a131, a132, a133, a134, 
                                   a135, a136, a137, a138, a139, a140, a141, a142, a143, a144, a145, a146, a147, a148, a149, a150, a151, 
                                   a152, a153, a154, a155, a156, a157, a158, a159, a160, a161, a162, a163, a164, a165])







w_graph.connect(a1, a2, round(0.111/45,6))
w_graph.connect(a1, a3, round(0.149/30,6))
w_graph.connect(a2, a11, round(0.072/45,6))
w_graph.connect(a2, a4, round(0.154/30,6))
w_graph.connect(a3, a4, round(0.120/30,6))
w_graph.connect(a3, a5, round(0.141/30,6))
w_graph.connect(a4, a13, round(0.062/30,6))
w_graph.connect(a4, a6, round(0.195/30,6))
w_graph.connect(a5, a6, round(0.118/30,6))
w_graph.connect(a5, a7, round(0.155/30,6))
w_graph.connect(a6, a8, round(0.177/30,6))
w_graph.connect(a6, a15, round(0.043/30,6))
w_graph.connect(a7, a8, round(0.67/30,6))
w_graph.connect(a7, a17, round(0.149/30,6))
w_graph.connect(a8, a9, round(0.106/30,6))
w_graph.connect(a8, a18, round(0.135/30,6))
w_graph.connect(a9, a10, round(0.096/30,6))
w_graph.connect(a9, a19, round(0.123/30,6))
w_graph.connect(a9, a15, round(0.046/30,6))
w_graph.connect(a10, a16, round(0.166/45,6))
w_graph.connect(a10, a20, round(0.13/45,6))
w_graph.connect(a10, a60, round(0.081/30,6))
w_graph.connect(a11, a12, round(0.094/45,6))
w_graph.connect(a11, a13, round(0.179/30,6))
w_graph.connect(a12, a66, round(0.106/45,6))
w_graph.connect(a12, a14, round(0.16/30,6))
w_graph.connect(a13, a14, round(0.1/30,6))
w_graph.connect(a13, a15, round(0.136/30,6))
w_graph.connect(a14, a64, round(0.061/30,6))
w_graph.connect(a14, a16, round(0.148/45,6))
w_graph.connect(a15, a16, round(0.096/30,6))
w_graph.connect(a16, a62, round(0.076/30,6))
w_graph.connect(a17, a18, round(0.082/30,6))
w_graph.connect(a17, a21, round(0.146/30,6))
w_graph.connect(a18, a19, round(0.091/30,6))
w_graph.connect(a18, a22, round(0.196/30,6))
w_graph.connect(a19, a20, round(0.08/30,6))
w_graph.connect(a19, a23, round(0.154/30,6))
w_graph.connect(a20, a58, round(0.081/30,6))
w_graph.connect(a20, a24, round(0.195/45,6))
w_graph.connect(a21, a22, round(0.092/30,6))
w_graph.connect(a22, a23, round(0.11/30,6))
w_graph.connect(a23, a24, round(0.056/30,6))
w_graph.connect(a24, a56, round(0.076/30,6))
w_graph.connect(a25, a26, round(0.082/60,6))
w_graph.connect(a25, a27, round(0.133/60,6))
w_graph.connect(a25, a30, round(0.068/45,6))
w_graph.connect(a26, a28, round(0.066/30,6))
w_graph.connect(a27, a32, round(0.034/45,6))
w_graph.connect(a28, a29, round(0.042/30,6))
w_graph.connect(a28, a30, round(0.057/30,6))
w_graph.connect(a29, a30, round(0.1/30,6))
w_graph.connect(a29, a31, round(0.108/30,6))
w_graph.connect(a29, a33, round(0.167/30,6))
w_graph.connect(a30, a32, round(0.111/45,6))
w_graph.connect(a31, a32, round(0.261/30,6))
w_graph.connect(a31, a34, round(0.187/30,6))
w_graph.connect(a31, a45, round(0.106/30,6))
w_graph.connect(a32, a47, round(0.122/45,6))
w_graph.connect(a33, a34, round(0.117/30,6))
w_graph.connect(a33, a35, round(0.162/30,6))
w_graph.connect(a34, a43, round(0.09/30,6))
w_graph.connect(a34, a36, round(0.15/30,6))
w_graph.connect(a35, a36, round(0.095/30,6))
w_graph.connect(a35, a37, round(0.163/30,6))
w_graph.connect(a36, a38, round(0.176/30,6))
w_graph.connect(a36, a41, round(0.097/30,6))
w_graph.connect(a37, a38, round(0.119/30,6))
w_graph.connect(a38, a39, round(0.104/30,6))
w_graph.connect(a39, a40, round(0.109/30,6))
w_graph.connect(a39, a41, round(0.177/30,6))
w_graph.connect(a40, a42, round(0.202/30,6))
w_graph.connect(a41, a42, round(0.117/30,6))
w_graph.connect(a41, a43, round(0.172/30,6))
w_graph.connect(a42, a44, round(0.195/30,6))
w_graph.connect(a42, a52, round(0.108/30,6))
w_graph.connect(a43, a44, round(0.120/30,6))
w_graph.connect(a43, a45, round(0.166/30,6))
w_graph.connect(a44, a46, round(0.2/30,6))
w_graph.connect(a44, a51, round(0.109/30,6))
w_graph.connect(a45, a46, round(0.123/30,6))
w_graph.connect(a45, a47, round(0.168/30,6))
w_graph.connect(a46, a48, round(0.219/30,6))
w_graph.connect(a46, a50, round(0.119/30,6))
w_graph.connect(a47, a48, round(0.106/45,6))
w_graph.connect(a48, a49, round(0.108/45,6))
w_graph.connect(a49, a50, round(0.192/45,6))
w_graph.connect(a49, a111, round(0.113/30,6))
w_graph.connect(a49, a116, round(0.112/45,6))
w_graph.connect(a50, a51, round(0.176/45,6))
w_graph.connect(a50, a117, round(0.115/30,6))
w_graph.connect(a51, a52, round(0.182/45,6))
w_graph.connect(a51, a118, round(0.122/30,6))
w_graph.connect(a52, a119, round(0.114/30,6))
w_graph.connect(a53, a54, round(0.09/30,6))
w_graph.connect(a53, a57, round(0.13/30,6))
w_graph.connect(a53, a101, round(0.109/30,6))
w_graph.connect(a54, a102, round(0.053/30,6))
w_graph.connect(a54, a55, round(0.096/30,6))
w_graph.connect(a55, a103, round(0.097/30,6))
w_graph.connect(a55, a109, round(0.089/45,6))
w_graph.connect(a55, a110, round(0.186/45,6))
w_graph.connect(a56, a57, round(0.084/30,6))
w_graph.connect(a56, a58, round(0.154/45,6))
w_graph.connect(a57, a101, round(0.088/30,6))
w_graph.connect(a57, a59, round(0.207/30,6))
w_graph.connect(a58, a59, round(0.09/30,6))
w_graph.connect(a58, a60, round(0.183/45,6))
w_graph.connect(a59, a61, round(0.239/30,6))
w_graph.connect(a59, a98, round(0.119/30,6))
w_graph.connect(a60, a61, round(0.105/30,6))
w_graph.connect(a60, a62, round(0.202/45,6))
w_graph.connect(a61, a95, round(0.117/30,6))
w_graph.connect(a61, a63, round(0.205/30,6))
w_graph.connect(a62, a64, round(0.22/45,6))
w_graph.connect(a62, a63, round(0.103/30,6))
w_graph.connect(a63, a65, round(0.156/30,6))
w_graph.connect(a63, a92, round(0.079/30,6))
w_graph.connect(a64, a65, round(0.079/30,6))
w_graph.connect(a64, a66, round(0.159/45,6))
w_graph.connect(a65, a67, round(0.12/30,6))
w_graph.connect(a65, a89, round(0.109/30,6))
w_graph.connect(a66, a67, round(0.083/45,6))
w_graph.connect(a67, a68, round(0.105/45,6))
w_graph.connect(a68, a69, round(0.102/45,6))
w_graph.connect(a68, a89, round(0.123/30,6))
w_graph.connect(a69, a70, round(0.15/45,6))
w_graph.connect(a69, a90, round(0.08/30,6))
w_graph.connect(a70, a71, round(0.126/45,6))
w_graph.connect(a70, a91, round(0.115/45,6))
w_graph.connect(a71, a72, round(0.071/45,6))
w_graph.connect(a71, a104, round(0.052/30,6))
w_graph.connect(a72, a73, round(0.105/45,6))
w_graph.connect(a72, a104, round(0.102/30,6))
w_graph.connect(a73, a74, round(0.139/45,6))
w_graph.connect(a73, a122, round(0.064/30,6))
w_graph.connect(a74, a78, round(0.253/45,6))
w_graph.connect(a74, a87, round(0.135/45,6))
w_graph.connect(a74, a131, round(0.221/30,6))
w_graph.connect(a75, a76, round(0.122/30,6))
w_graph.connect(a76, a77, round(0.123/30,6))
w_graph.connect(a77, a78, round(0.126/30,6))
w_graph.connect(a77, a79, round(0.229/45,6))
w_graph.connect(a78, a80, round(0.146/45,6))
w_graph.connect(a78, a84, round(0.126/30,6))
w_graph.connect(a79, a80, round(0.036/30,6))
w_graph.connect(a80, a81, round(0.155/45,6))
w_graph.connect(a81, a82, round(0.064/30,6))
w_graph.connect(a81, a84, round(0.209/45,6))
w_graph.connect(a81, a120, round(0.041/30,6))
w_graph.connect(a82, a83, round(0.11/30,6))
w_graph.connect(a83, a121, round(0.038/30,6))
w_graph.connect(a84, a85, round(0.076/30,6))
w_graph.connect(a85, a86, round(0.067/30,6))
w_graph.connect(a87, a140, round(0.06/45,6))
w_graph.connect(a87, a88, round(0.104/45,6))
w_graph.connect(a88, a151, round(0.11/45,6))
w_graph.connect(a89, a90, round(0.062/30,6))
w_graph.connect(a89, a92, round(0.146/30,6))
w_graph.connect(a90, a91, round(0.088/30,6))
w_graph.connect(a90, a93, round(0.039/30,6))
w_graph.connect(a91, a104, round(0.107/30,6))
w_graph.connect(a91, a94, round(0.155/45,6))
w_graph.connect(a92, a93, round(0.062/30,6))
w_graph.connect(a92, a95, round(0.179/30,6))
w_graph.connect(a93, a94, round(0.076/30,6))
w_graph.connect(a93, a96, round(0.358/30,6))
w_graph.connect(a94, a105, round(0.131/30,6))
w_graph.connect(a94, a97, round(0.203/45,6))
w_graph.connect(a95, a96, round(0.062/30,6))
w_graph.connect(a95, a98, round(0.144/30,6))
w_graph.connect(a96, a97, round(0.082/30,6))
w_graph.connect(a96, a99, round(0.308/30,6))
w_graph.connect(a97, a106, round(0.158/30,6))
w_graph.connect(a97, a100, round(0.252/30,6))
w_graph.connect(a98, a99, round(0.06/30,6))
w_graph.connect(a98, a101, round(0.16/45,6))
w_graph.connect(a99, a100, round(0.062/30,6))
w_graph.connect(a99, a102, round(0.292/30,6))
w_graph.connect(a100, a103, round(0.159/30,6))
w_graph.connect(a100, a107, round(0.11/30,6))
w_graph.connect(a101, a102, round(0.054/30,6))
w_graph.connect(a102, a103, round(0.057/30,6))
w_graph.connect(a103, a108, round(0.124/30,6))
w_graph.connect(a104, a105, round(0.2/45,6))
w_graph.connect(a104, a122, round(0.129/30,6))
w_graph.connect(a105, a106, round(0.242/45,6))
w_graph.connect(a105, a123, round(0.124/30,6))
w_graph.connect(a106, a107, round(0.198/45,6))
w_graph.connect(a106, a124, round(0.123/30,6))
w_graph.connect(a107, a108, round(0.184/45,6))
w_graph.connect(a107, a125, round(0.129/30,6))
w_graph.connect(a108, a109, round(0.19/45,6))
w_graph.connect(a108, a126, round(0.123/30,6))
w_graph.connect(a109, a112, round(0.127/45,6))
w_graph.connect(a110, a111, round(0.135/45,6))
w_graph.connect(a110, a112, round(0.055/30,6))
w_graph.connect(a111, a113, round(0.057/45,6))
w_graph.connect(a112, a113, round(0.128/45,6))
w_graph.connect(a113, a116, round(0.018/45,6))
w_graph.connect(a114, a126, round(0.043/30,6))
w_graph.connect(a114, a136, round(0.086/30,6))
w_graph.connect(a115, a127, round(0.052/30,6))
w_graph.connect(a116, a117, round(0.162/45,6))
w_graph.connect(a116, a127, round(0.124/30,6))
w_graph.connect(a117, a118, round(0.171/45,6))
w_graph.connect(a117, a128, round(0.134/30,6))
w_graph.connect(a118, a119, round(0.173/45,6))
w_graph.connect(a118, a129, round(0.12/30,6))
w_graph.connect(a119, a130, round(0.111/30,6))
w_graph.connect(a120, a121, round(0.132/15,6))
w_graph.connect(a122, a123, round(0.204/30,6))
w_graph.connect(a122, a131, round(0.138/30,6))
w_graph.connect(a123, a124, round(0.188/30,6))
w_graph.connect(a123, a132, round(0.132/30,6))
w_graph.connect(a124, a125, round(0.205/30,6))
w_graph.connect(a124, a133, round(0.125/30,6))
w_graph.connect(a125, a126, round(0.207/30,6))
w_graph.connect(a125, a134, round(0.12/30,6))
w_graph.connect(a126, a135, round(0.118/45,6))
w_graph.connect(a127, a128, round(0.209/30,6))
w_graph.connect(a127, a137, round(0.12/45,6))
w_graph.connect(a128, a129, round(0.202/30,6))
w_graph.connect(a128, a138, round(0.117/30,6))
w_graph.connect(a129, a130, round(0.215/30,6))
w_graph.connect(a129, a139, round(0.122/30,6))
w_graph.connect(a131, a132, round(0.196/45,6))
w_graph.connect(a131, a140, round(0.094/30,6))
w_graph.connect(a132, a133, round(0.19/45,6))
w_graph.connect(a132, a141, round(0.106/30,6))
w_graph.connect(a133, a134, round(0.204/45,6))
w_graph.connect(a133, a142, round(0.111/30,6))
w_graph.connect(a134, a135, round(0.2/45,6))
w_graph.connect(a134, a143, round(0.102/30,6))
w_graph.connect(a135, a136, round(0.206/45,6))
w_graph.connect(a135, a144, round(0.112/30,6))
w_graph.connect(a136, a137, round(0.384/45,6))
w_graph.connect(a136, a145, round(0.121/60,6))
w_graph.connect(a137, a138, round(0.206/45,6))
w_graph.connect(a137, a147, round(0.122/45,6))
w_graph.connect(a138, a139, round(0.203/45,6))
w_graph.connect(a138, a148, round(0.105/30,6))
w_graph.connect(a139, a149, round(0.122/30,6))
w_graph.connect(a140, a141, round(0.206/30,6))
w_graph.connect(a141, a142, round(0.191/30,6))
w_graph.connect(a141, a150, round(0.126/30,6))
w_graph.connect(a142, a143, round(0.213/30,6))
w_graph.connect(a142, a153, round(0.141/30,6))
w_graph.connect(a143, a144, round(0.202/30,6))
w_graph.connect(a143, a154, round(0.111/30,6))
w_graph.connect(a144, a145, round(0.29/45,6))
w_graph.connect(a144, a156, round(0.123/30,6))
w_graph.connect(a145, a146, round(0.223/30,6))
w_graph.connect(a146, a147, round(0.215/30,6))
w_graph.connect(a146, a158, round(0.136/45,6))
w_graph.connect(a147, a148, round(0.202/30,6))
w_graph.connect(a147, a159, round(0.142/30,6))
w_graph.connect(a148, a149, round(0.207/30,6))
w_graph.connect(a148, a160, round(0.118/30,6))
w_graph.connect(a149, a162, round(0.129/30,6))
w_graph.connect(a150, a151, round(0.083/30,6))
w_graph.connect(a150, a153, round(0.188/30,6))
w_graph.connect(a151, a152, round(0.089/45,6))
w_graph.connect(a152, a153, round(0.145/30,6))
w_graph.connect(a152, a155, round(0.238/30,6))
w_graph.connect(a153, a154, round(0.204/30,6))
w_graph.connect(a154, a155, round(0.074/30,6))
w_graph.connect(a154, a156, round(0.213/30,6))
w_graph.connect(a155, a157, round(0.209/45,6))
w_graph.connect(a156, a157, round(0.072/30,6))
w_graph.connect(a156, a158, round(0.37/30,6))
w_graph.connect(a157, a163, round(0.206/45,6))
w_graph.connect(a158, a159, round(0.212/30,6))
w_graph.connect(a158, a163, round(0.187/45,6))
w_graph.connect(a158, a164, round(0.074/45,6))
w_graph.connect(a159, a165, round(0.131/30,6))
w_graph.connect(a159, a160, round(0.212/30,6))
w_graph.connect(a160, a161, round(0.095/30,6))
w_graph.connect(a160, a162, round(0.173/30,6))
w_graph.connect(a161, a165, round(0.112/30,6))
w_graph.connect(a163, a164, round(0.134/45,6))
w_graph.connect(a164, a165, round(0.081/30,6))

w_graph.print_adj_mat()



def find_sum(a):
    lst =[]
    summ = 0
    for (weight, node) in w_graph.dijkstra(a):
        lst.append(weight)
    for i in range(len(lst)):
        summ += lst[i]
    return summ
summm = []
num = 1
print('Отримані суми: ')
for el in [a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
                                   a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40,
                                   a41, a42, a43, a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a60,
                                   a61, a62, a63, a64, a65, a66, a67, a68, a69, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a80,
                                   a81, a82, a83, a84, a85, a86, a87, a88, a89, a90, a91, a92, a93, a94, a95, a96, a97, a98, a99, a100,
                                   a101, a102, a103, a104, a105, a106, a107, a108, a109, a110, a111, a112, a113, a114, a115, a116, a117, 
                                   a118, a119, a120, a121, a122, a123, a124, a125, a126, a127, a128, a129, a130, a131, a132, a133, a134, 
                                   a135, a136, a137, a138, a139, a140, a141, a142, a143, a144, a145, a146, a147, a148, a149, a150, a151, 
                                   a152, a153, a154, a155, a156, a157, a158, a159, a160, a161, a162, a163, a164, a165]:
    print('a'+ str(num)+ ':',  find_sum(el))
    summm.append(find_sum(el))
    num += 1

print('Оптимальна точка:')    
print('a107:', min(summm))    
